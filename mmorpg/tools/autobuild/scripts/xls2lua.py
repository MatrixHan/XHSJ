#! /usr/bin/env python
# -*- coding: UTF-8 -*- 
# author: luzexi
import codecs
import xlrd
import os.path
import time
import os

import importlib
import sys
importlib.reload(sys)
# 让py可以读取文件中的中文
# import sys
# reload(sys)
# sys.setdefaultencoding("utf-8")

SCRIPT_HEAD = "-- this file is generated by program!\n\
-- don't change it manaully.\n\
-- source file: %s\n\
-- created at: %s\n\
\n\
\n\
"
#判断是否是整数
def is_num_by_int(num):
    try:
        int(num)
        return True
    except ValueError:
        return False

#判断是否是浮点数
def is_num_by_float(num):
    try:
        float(num)
        return True
    except ValueError:
        return False

def make_table(filename, output_path):
	if not os.path.isfile(filename):
		print("%s is	not	a valid	filename", filename)
	# book_xlrd = xlrd.open_workbook(filename,formatting_info=True)
	book_xlrd = xlrd.open_workbook(filename)


	for booksheet in book_xlrd.sheets():
		sheet_name = booksheet.name.replace(" ", "_")
		if not sheet_name.startswith("output_"):
			continue
		sheet_name = sheet_name[7:]
		fileOutput = codecs.open(output_path + "/" + sheet_name + ".lua", 'w','utf-8')
		writeData = 'local ret = {\n'
		key = []
		valType = []
		
		# 必须大于3行
		if booksheet.nrows <= 2:
			print("sheet[" + sheet_name + "]" + " rows must > 3")
			return

		for col in range(booksheet.ncols):
			key.append(booksheet.cell(1, col).value)
			valType.append(booksheet.cell(2,col).value)
		for row in range(booksheet.nrows):
			if row <= 2 or booksheet.cell(row,0).value =='':
				continue
			if valType[0] == "i": #int
				writeData = writeData + '\t[' + str(int(booksheet.cell(row, 0).value)) + '] = {\n' 
			else:
				if valType[0] == "s":
					writeData = writeData + '\t["' + str(booksheet.cell(row, 0).value) + '"] = {\n'
				else:
					print("error , the key is not integer or string !")
			for col in range(booksheet.ncols):
				if str(booksheet.cell(row, col).value) == "":
					continue

				tempRow = "\t\t"
				tempRow  = tempRow + str(key[col]) + ' = '
				if valType[col] == "t":  #table
					level = 2
					newLine = 0
					tempString = str(booksheet.cell(row, col).value)
					for ch in tempString:
						if ch == "{":
							tempRow = tempRow + "\n"
							for i in range(0,level):
								tempRow = tempRow + "\t"
							tempRow = tempRow + "{\n"
							level += 1
							for i in range(0,level):
								tempRow = tempRow + "\t"
						else:
							if ch == "}":
								tempRow = tempRow + "\n"
								level -= 1
								for i in range(0,level):
									tempRow = tempRow + "\t"
								tempRow = tempRow + "}"
								newLine = 1
							else:
								if ch == ",":
									tempRow = tempRow + ch
									if newLine == 1:
										tempRow = tempRow + "\n"
										newLine = 0
										for i in range(0,level):
											tempRow = tempRow + "\t"
									
								else:
									tempRow = tempRow + ch
						
				if valType[col] == "i":  #ints
					tempRow = tempRow + str(int(booksheet.cell(row, col).value))
				if valType[col] == "s":  #string
					if is_num_by_int(booksheet.cell(row, col).value):
						stringValue = str(int(booksheet.cell(row, col).value))
					else:
						stringValue = str(booksheet.cell(row, col).value)
						
					# handle special char such as " or /
					stringValue = stringValue.replace('\\', '\\\\')  
					stringValue = stringValue.replace('"', '\\"')
					tempRow = tempRow + '"' + stringValue + '"'
				if valType[col] == "f":  #float
					tempRow = tempRow + str(booksheet.cell(row, col).value)
				writeData = writeData + tempRow + ',\n'
			else:
				writeData = writeData + '\t} ,\n'
		else:
			writeData = writeData + '}\nreturn ret'     

		fileOutput.write(writeData)

		fileOutput.close() 


def main(filename, output_path):
	
	if not os.path.exists(filename):
		sys.exit("error: "+filename+" is not exists.")
	make_table(filename, output_path)


# if __name__=="__main__":
# 	main()

